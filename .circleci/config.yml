version: 2.1
orbs:
  node: circleci/node@2.1.1
  gcp-gke: circleci/gcp-gke@0.1.0
  gcr: circleci/gcp-gcr@0.0.2
jobs:
  build:
    working_directory: ~/cloud-carbon-footprint
    docker:
      - image: circleci/node:current
    environment:
      MAJOR_REVISION: 0
      MINOR_REVISION: 0
      GIT_HASH: <<pipeline.git.revision>>
    # Currently, the cache is commented out since it's slower than installing dependencies every time. Once the
    # dependency list grows and build time increases, we can start using the cache again. Caching takes about ~30s to
    # resolve and use as of this comment.
    steps:
      - checkout
      # - restore_cache:
      #     key: dependency-cache-{{ checksum "package-lock.json" }}-{{ checksum "client/package-lock.json" }}-{{ checksum "server/package-lock.json" }}
      - run:
          name: setup
          command: "[ ! -d node_modules ] && echo npm run bootstrap || echo NPM packages unchanged. Using cache."
      # - save_cache:
      #     key: dependency-cache-{{ checksum "package-lock.json" }}-{{ checksum "client/package-lock.json" }}-{{ checksum "server/package-lock.json" }}
      #     paths:
      #       - ./node_modules
      #       - ./client/node_modules
      #       - ./server/node_modules
      - run:
          name: lint
          command: 'echo npm run lint'
      - run:
          name: test
          command: 'echo npm test'
  publish:
    description: Build and push image to Google Container Registry
    docker:
      - image: circleci/node:current
    steps:
      - checkout
      - run: |
          cd client
          npm run build
      - gcr/gcr-auth
      - gcr/build-image:
          image: client
          tag: 0.0.<<pipeline.git.revision>>
      - gcr/push-image:
          image: client
          tag: 0.0.<<pipeline.git.revision>>
workflows:
  version: 2
  build-and-deploy:
    jobs:
      - build
      - publish:
          requires:
            - build