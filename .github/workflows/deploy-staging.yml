name: Deploy Staging
on:
  workflow_dispatch:
  push:
    branches: [trunk, gh-actions]
jobs:
  build:
    runs-on: ubuntu-latest
    environment:
      name: staging
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: '14'
      - name: build-client
        env:
          HOST_URL: ${{ secrets.HOST_URL }}
          OKTA_ORG_URL: ${{ secrets.OKTA_ORG_URL }}
          APP_SECRET: ${{ secrets.APP_SECRET }}
          OKTA_CLIENT_ID: ${{ secrets.OKTA_CLIENT_ID }}
          OKTA_CLIENT_SECRET: ${{ secrets.OKTA_CLIENT_SECRET }}
        run: |
          cd client
          yarn build
          ./create_client_stage_env_file.sh
          cd ..
      - name: build-server
        env:
          AWS_PROXY_ACCOUNT_ID: ${{ secrets.AWS_PROXY_ACCOUNT_ID }}
          AWS_PROXY_ROLE_NAME: ${{ secrets.AWS_PROXY_ROLE_NAME }}
          AWS_ACCOUNTS: ${{ secrets.AWS_ACCOUNTS }}
          AWS_TARGET_ACCOUNT_ROLE_NAME: ${{ secrets.AWS_TARGET_ACCOUNT_ROLE_NAME }}
          AWS_ATHENA_DB_NAME: ${{ secrets.AWS_ATHENA_DB_NAME }}
          AWS_ATHENA_DB_TABLE: ${{ secrets.AWS_ATHENA_DB_TABLE }}
          AWS_ATHENA_QUERY_RESULT_LOCATION: ${{ secrets.AWS_ATHENA_QUERY_RESULT_LOCATION }}
          AWS_BILLING_ACCOUNT_ID: ${{ secrets.AWS_BILLING_ACCOUNT_ID }}
          AWS_BILLING_ACCOUNT_NAME: ${{ secrets.AWS_BILLING_ACCOUNT_NAME }}
          GCP_PROJECTS: ${{ secrets.GCP_PROJECTS }}
          GCP_TARGET_ACCOUNT_EMAIL: ${{ secrets.GCP_TARGET_ACCOUNT_EMAIL }}
          GCP_TARGET_ACCOUNT_PRIVATE_KEY: ${{ secrets.GCP_TARGET_ACCOUNT_PRIVATE_KEY }}
          GCP_BIG_QUERY_TABLE: ${{ secrets.GCP_BIG_QUERY_TABLE }}
          GCP_BILLING_ACCOUNT_ID: ${{ secrets.GCP_BILLING_ACCOUNT_ID }}
          GCP_BILLING_ACCOUNT_NAME: ${{ secrets.GCP_BILLING_ACCOUNT_NAME }}
        run: |
          cd server
          yarn build
          ./create_server_env_file.sh
          cd ..
      - name: staging-deploy
        env:
          GCLOUD_SERVICE_KEY: ${{ secrets.GCLOUD_SERVICE_KEY }}
          GOOGLE_PROJECT_ID: ${{ secrets.GOOGLE_PROJECT_ID }}
          GOOGLE_COMPUTE_ZONE: ${{ secrets.GOOGLE_COMPUTE_ZONE }}
        run: |
          apk add --update python3 py-crcmod bash libc6-compat curl
          export PATH=$PATH:/root/google-cloud-sdk/bin
          curl -sSL https://sdk.cloud.google.com > /tmp/gcloud-install && bash /tmp/gcloud-install --disable-prompts --install-dir=/root

          # Store service account
          echo $GCLOUD_SERVICE_KEY > ${HOME}/gcloud-service-key.json

          # Initialize gcloud CLI
          gcloud auth activate-service-account --key-file=${HOME}/gcloud-service-key.json

          gcloud --quiet config set project $GOOGLE_PROJECT_ID

          gcloud --quiet config set compute/zone $GOOGLE_COMPUTE_ZONE

          cd appengine
          ./deploy-staging.sh
          cd ..
